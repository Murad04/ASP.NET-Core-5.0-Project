#pragma checksum "C:\Users\DELL\source\repos\WebApplication7\WebApplication7\Areas\Admin\Views\Writer\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5393379c8b236be8d9a09d55c3574ec5c938e766"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Writer_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/Writer/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\DELL\source\repos\WebApplication7\WebApplication7\Areas\Admin\Views\_ViewImports.cshtml"
using WebApplication7.Areas.Admin;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\DELL\source\repos\WebApplication7\WebApplication7\Areas\Admin\Views\_ViewImports.cshtml"
using WebApplication7.Areas.Admin.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5393379c8b236be8d9a09d55c3574ec5c938e766", @"/Areas/Admin/Views/Writer/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"66070ce1040bfe5b12ba4ece085e0cab6da3d3c2", @"/Areas/Admin/Views/_ViewImports.cshtml")]
    public class Areas_Admin_Views_Writer_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\DELL\source\repos\WebApplication7\WebApplication7\Areas\Admin\Views\Writer\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h1>Yazar AJAX islemler</h1>

<button id=""btngetlist"" class=""btn btn-outline-primary"">Yazar Listesi</button>
<button id=""btngetbyid"" class=""btn btn-outline-success"">Yazar Getir</button>
<button id=""btnaddwriter"" class=""btn btn-outline-success"">Yazar Ekle</button>
<button id=""btndeletewriter"" class=""btn btn-outline-danger"">Yazar Sil</button>
<button id=""btnupdatewriter"" class=""btn btn-outline-warning"">Yazar Guncelle</button>
<br />
<br />
<div id=""writerget"">

</div>
<div>
    <input type=""text"" id=""writerid"" class=""form-control"" placeholder=""Id..."" />
</div>
<div>
    <input type=""text"" class=""form-control"" id=""txtwriterid"" placeholder=""id"" />
    <input type=""text"" class=""form-control"" id=""txtwritername"" placeholder=""name"" />
</div>
<div>
    <input type=""text"" class=""form-control"" id=""wid"" placeholder=""silinecek id"" />
</div>
<div>
    <input type=""text"" class=""form-control"" id=""updatewriterid"" placeholder=""Guncellenecke writer id yazin.."" />
    <input type=""text"" class=""form-cont");
            WriteLiteral("rol\" id=\"updatewritername\" placeholder=\"Guncellenecke writer name yazin..\" />\r\n</div>\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        $(""#btngetlist"").click(function () {
            $.ajax({
                contentType: ""application/json"",
                dataType: ""json"",
                type: ""GET"",
                url: ""/Admin/Writer/WriterList/"",
                success: function (func) {
                    let writers = jQuery.parseJSON(func)
                    console.log(writers);
                    let tablehtml = ""<table class=table table-bordered> <tr><th> Yazar ID </th> <th> Yazar AD </th>  </tr>"";
                    $.each(writers, (index, value) => {
                        tablehtml += `<tr><td>${value.writerid}</td> <td>${value.writername}</td></tr>`
                    });
                    tablehtml += ""</table>"";
                    $(""#writerget"").html(tablehtml);
                }
            });
        });

        $(""#btngetbyid"").click(x => {
            let id = $(""#writerid"").val();
            $.ajax({
                contentType: ""application/json"",
          ");
                WriteLiteral(@"      data: ""json"",
                type: ""GET"",
                url: ""/Admin/Writer/GetWriterById/"",
                data: { writerid: id },
                success: function (func) {
                    let w = jQuery.parseJSON(func);
                    console.log(func);

                    let getValue = `<table class=table=bordered> <tr> <th>Yazar ID</th>  <th>Yazar AD</th></tr> <tr><td>${w.writerid}</td><td>${w.writername}</td></tr></table>`;
                    $(""#writerget"").html(getValue);

                }
            });
        });

        $(""#btnaddwriter"").click(function () {
            let writer = {
                writerid: $(""#txtwriterid"").val(),
                writername: $(""#txtwritername"").val(),
            };

            $.ajax({
                type: ""post"",
                url: ""/Admin/Writer/AddWriter/"",
                data: writer,
                success: function (func) {
                    let result = jQuery.parseJSON(func);
                ");
                WriteLiteral(@"    alert(""Success"");
                }
            });

        });

        $(""#btndeletewriter"").click(x => {
            let id = $(""#wid"").val();
            $.ajax({
                url: ""/Admin/Writer/DeleteWriter/"" + id,
                type: ""post"",
                dataType: ""json"",
                success: function (func) {
                    alert(""Success"");
                }
            });
        });

        $(""#btnupdatewriter"").click(function () {
            let writer = {
                writerid: $(""updatewriterid"").val(),
                writerid: $(""updatewritername"").val(),
            };

            $.ajax({
                type: ""post"",
                url: ""/Admin/Writer/UpdateWriter/"",
                data: writer,
                success: function (func) {
                    alert(""tamamlandi"");
                },
            })
        })


    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
